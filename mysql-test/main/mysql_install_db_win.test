--source include/windows.inc

# Create database  in tmp directory using mysql_install_db.exe, 
# and start server from this directory.
let $ddir= $MYSQLTEST_VARDIR/tmp/ddir;
exec $MYSQL_INSTALL_DB_EXE --datadir=$ddir --password=foo -R;

--source include/kill_mysqld.inc
let $restart_parameters=--datadir=$ddir --loose-innodb;
--source include/start_mysqld.inc

connect root,localhost,root,foo;
# Smoke test - check that we're actually using datadir
# we've created (i.e restart_parameters worked)
--replace_result  $ddir DATADIR
SELECT @@datadir;

# restart in the original datadir again
--source include/kill_mysqld.inc
rmdir $ddir;
let $restart_parameters=;
connection default;

# Test --template option
let _BASEDIR = $MYSQLTEST_VARDIR/tmp/basedir;
perl;

  open(IN, '<', "std_data/mysql_install_db_win.ini.in") or die;
  open(OUT, '>', "$ENV{MYSQLTEST_VARDIR}/tmp/mysql_install_db_win.ini") or die;
  while (<IN>) {
    s/BASEDIR/$ENV{_BASEDIR}/g;
    print OUT $_;
  }
  close IN;
  close OUT
EOF
mkdir $_BASEDIR;
mkdir $_BASEDIR/temp;

# Run mysql_install_db.exe with config parameter
--disable_result_log
exec $MYSQL_INSTALL_DB_EXE -o --port=3307 --config=$MYSQLTEST_VARDIR/tmp/mysql_install_db_win.ini;
--enable_result_log

# dump the modified config in data directory
perl;
  open(IN, '<', "$ENV{_BASEDIR}/data/my.ini") or die;
  while (<IN>) {
    s/$ENV{_BASEDIR}/BASEDIR/g;
    # when testing on installation layout, client's plugin
    # dir is added, but when testing in build dir.
    print unless  $_ =~ /plugin-dir/;
  }
  close IN;
EOF
rmdir $_BASEDIR;
--source include/start_mysqld.inc

